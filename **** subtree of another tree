Given the roots of two binary trees root and subRoot,
 return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.

A subtree of a binary tree tree is a tree that consists of a node in tree 
and all of this node's descendants. The tree tree could also be considered as a subtree of itself.

mistake null pointer exception because if (|| first ) 


  bool f=false;
    int c=0;
    bool match(TreeNode* root, TreeNode* subRoot)
    {
        if(!subRoot&&!root)                   ******************** // agar dono m s koi ek bhi null hogya to nhi ho payeva
           return true;
         */**********************************************************// aage piche gadbad j 
        
        if(root==0||subRoot==0||root->val!=subRoot->val)
            return false;
        
        return match(root->left,subRoot->left)&& match(root->right,subRoot->right);
    }
    void h(TreeNode* root, TreeNode* subRoot)
    {
          if(root==0)
              return ;
        
        if(c==1)
            return ;
        if(root->val==subRoot->val)
        {
            if(match(root,subRoot))
            {  
                f=true;
               c=1;
            }
        }
        if(root->left)
        h(root->left,subRoot);
        if(root->right)
        h(root->right,subRoot);
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        
        
       h(root,subRoot);
        
        return f;
            
    }
